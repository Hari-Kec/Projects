# -*- coding: utf-8 -*-
"""Copy of market basket analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ydTey2jGenvo52yC18YFWXIcFZtWrZr7

# MARKET BASKET ANALYSIS


"""

## importing necessary packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules
import warnings
warnings.filterwarnings('ignore')

## installing apyori
pip install apyori

from apyori import apriori

## reading data
data = pd.read_excel('/content/project_data.xlsx')

data

data.info()

data.describe()

## data cleaning
data.isnull().sum()

## data visualization
sns.heatmap(data.isnull())

data.dropna(axis = 0, inplace=True)

data.isnull().sum()

data

## checking for duplicate and negative data
data[data['Quantity']<0].isnull().sum()

data.duplicated().sum()

data.drop_duplicates(inplace=True)

data.duplicated().sum()

data.shape

## checking for data having prce less than or equal to  0
data[data['Price']<=0]

data[data['Price']<=0].sum()

data=data[data['Price']>0]

data.shape

##top 10 products
data.Itemname.value_counts()

data.Itemname.value_counts().head(10).plot.bar(color='cyan')
plt.title('Top 10 Selling items')
plt.xlabel('Item name ')
plt.ylabel('Number of items sold')

data.CustomerID.value_counts().head(10)

data.CustomerID.value_counts().head(10).plot.bar(color ='green')
plt.title('Top 10 Customers')
plt.xlabel('Customer IDs of customers')

## top 10 countries having highest records of purchase
data.Country.value_counts().head(10)

data.Country.value_counts().head(10).plot.bar(color='red')
plt.title('Top 10 Countries')
plt.xlabel('Name of the Country')
plt.ylabel('Number of records')



## seperating the year, month and day and droping the time column
data['year'] = pd.DatetimeIndex(data['Date']).year
data['month'] = pd.DatetimeIndex(data['Date']).month
data['day'] = pd.DatetimeIndex(data['Date']).day

data

data.drop(['Date'], axis =1, inplace=True)

data

df = data.copy()

data2 = data.copy()

data3 = data.copy()

data4 = data.copy()

"""seperating data for france"""

basket = (data2[data2['Country'] =="France"].groupby(['BillNo', 'Itemname'])['Quantity'].sum().unstack().reset_index().set_index('BillNo')).fillna(0)

basket.head()

basket.shape

def result(x):
    if x <= 0:
        return 0
    if x >= 1:
        return 1
basket_set = basket.applymap(result)

basket_set.head()

frequent_itemset = apriori(basket_set.astype('bool'), min_support=0.07, use_colnames=True)

rules = association_rules(frequent_itemset, metric="lift", min_threshold=1)

rules

rules.head(10)

rules[(rules['lift'] >= 6) &
       (rules['confidence'] >= 0.8)]



"""seperating data for UK"""

basket_1 = (data3[data3['Country'] =="United Kingdom"].groupby(['BillNo', 'Itemname'])['Quantity'].sum().unstack().reset_index().set_index('BillNo'))

basket.head(10)

basket.shape()

basket_set1 = basket_1.applymap(result)

basket_set1.head()

frequent_itemset1 = apriori(basket_set1.astype('bool'), min_support=0.001, use_colnames=True)

rules1 = association_rules(frequent_itemset1, metric="lift", min_threshold=1)

rules1[(rules1['lift'] >= 6) &
       (rules['confidence'] >= 0.8)]



"""seperating data for germany"""

basket_2 = (data4[data4['Country'] =="United Kingdom"].groupby(['BillNo', 'Itemname'])['Quantity'].sum().unstack().reset_index().set_index('BillNo'))

basket.head()

basket.shape()

basket_set2 = basket_2.applymap(result)

basket_set.head(10)

frequent_itemset2 = apriori(basket_set2.astype('bool'), min_support=0.05, use_colnames=True)

rules2 = association_rules(frequent_itemset2, metric="lift", min_threshold=1)

rules2[(rules2['lift'] >= 6) &
       (rules['confidence'] >= 0.8)]

